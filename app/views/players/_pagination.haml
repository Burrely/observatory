%nav
  %ul.pagination
    - pagination = Observatory::Pagination.paginate(dataset.page_range, dataset.current_page, leading: Observatory::Config::Player::PAGINATION_LEADING, surrounding: Observatory::Config::Player::PAGINATION_SURROUNDING, trailing: Observatory::Config::Player::PAGINATION_TRAILING)
    - pagination.each do |item|
      - if item[:type] == :prev
        - if item[:attributes].include? :disabled
          %li.disabled
            %a{ href: '#' }
              %span &laquo;
        - else
          %li
            %a{ href: url(:players, :index, page: item[:page], filter: params['filter'], badges: params['badges'], last_active_after: params['last_active_after']) }
              %span &laquo;

      - elsif item[:type] == :next
        - if item[:attributes].include? :disabled
          %li.disabled
            %a{ href: '#' }
              %span &raquo;
        - else
          %li
            %a{ href: url(:players, :index, page: item[:page], filter: params['filter'], badges: params['badges'], last_active_after: params['last_active_after']) }
              %span &raquo;


      - elsif item[:type] == :page
        %li{class: item[:attributes].include?(:active) ? 'active' : nil}
          = player_pagination_link(item[:page], filter: params['filter'], badges: params['badges'], last_active_after: params['last_active_after'])

      - elsif item[:type] == :separator
        %li.disabled
          %span ...

